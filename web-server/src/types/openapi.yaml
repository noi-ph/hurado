openapi: 3.0.3
info:
  title: Hurado Online Judge
  description: ''
  version: 0.0.1
tags:
  - name: Account
  - name: Tasks
paths:
  /v1/users/login:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPayload'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
        500:
          description: Internal server error
  /v1/users/register:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPayload'
      responses:
        200:
          description: OK
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
        500:
          description: Internal server error
  /v1/users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
    patch:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEditPayload'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserError'
        500:
          description: Internal server error
    get:
      tags:
        - Account
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Not found
        500:
          description: Internal server error
  /v1/users/{id}/all-details:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
    get:
      tags:
        - Account
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailed'
        403:
          description: Unauthorized
        404:
          description: Not found
        500:
          description: Internal server error
  /v1/tasks/{idOrSlug}:
    parameters:
      - in: path
        name: idOrSlug
        schema:
          type: string
        required: true
    post:
      tags:
        - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionPayload'
      responses:
        200:
          description: OK
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionError'
        401:
          description: Not logged in
        403:
          description: Unauthorized
        404:
          description: Not found
        500:
          description: Internal server error
    put:
      tags:
        - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskPayload'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskError'
        401:
          description: Not logged in
        403:
          description: Unauthorized
        404:
          description: Not found
        500:
          description: Internal server error
    get:
      tags:
        - Tasks
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        401:
          description: Not logged in
        404:
          description: Not found
        500:
          description: Internal server error
  /v1/tasks/{idOrSlug}/all-details:
    parameters:
      - in: path
        name: idOrSlug
        schema:
          type: string
        required: true
    get:
      tags:
        - Tasks
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetailed'
        401:
          description: Not logged in
        403:
          description: Unauthorized
        404:
          description: Not found
        500:
          description: Internal server error
  /v1/tasks:
    post:
      tags:
        - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskPayload'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskError'
        401:
          description: Not logged in
        403:
          description: Unauthorized
        500:
          description: Internal server error
    get:
      tags:
        - Tasks
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskSummary'
        500:
          description: Internal server error
components:
  schemas:
    LoginPayload:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    RegisterPayload:
      type: object
      required:
        - email
        - username
        - password
        - passwordConfirm
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
        passwordConfirm:
          type: string
    UserEditPayload:
      type: object
      properties:
        email:
          type: string
        username:
          type: string
        school:
          type: string
        name:
          type: string
        country:
          type: string
        password:
          type: string
        passwordConfirm:
          type: string
    SubmissionPayload:
      type: object
      required:
        - languageCode
      properties:
        id:
          type: string
        languageCode:
          type: string
        contestId:
          type: string
    FilePayload:
      type: object
      required:
        - name
        - size
        - contents
      properties:
        id:
          type: string
        name:
          type: string
        size:
          type: number
        contents:
          type: any
    ScriptPayload:
      type: object
      required:
        - file
        - languageCode
        - runtimeArgs
      properties:
        id:
          type: string
        file:
          $ref: '#/components/schemas/FilePayload'
        languageCode:
          type: string
        runtimeArgs:
          type: string
    SubtaskPayload:
      type: object
      required:
        - name
        - order
        - scoreMax
        - scorerScript
        - validatorScript
        - testDataPattern
      properties:
        id:
          type: string
        name:
          type: string
        order:
          type: number
        scoreMax:
          type: number
        scorerScript:
          $ref: '#/components/schemas/ScriptPayload'
        validatorScript:
          $ref: '#/components/schemas/ScriptPayload'
        testDataPattern:
          type: array
          items:
            type: string
    TaskAttachmentPayload:
      type: object
      required:
        - file
      properties:
        id:
          type: string
        file:
          $ref: '#/components/schemas/FilePayload'
    TestDataPayload:
      type: object
      required:
        - order
        - name
        - inputFile
        - outputFile
        - isSample
      properties:
        id:
          type: string
        order:
          type: number
        name:
          type: string
        inputFile:
          $ref: '#/components/schemas/FilePayload'
        outputFile:
          $ref: '#/components/schemas/FilePayload'
        judgeFile:
          $ref: '#/components/schemas/FilePayload'
        isSample:
          type: boolean
    TaskDeveloperPayload:
      type: object
      required:
        - username
        - order
        - role
      properties:
        id:
          type: string
        username:
          type: string
        order:
          type: number
        role:
          type: string
    TaskPayload:
      type: object
      required:
        - title
        - slug
        - statement
        - allowedLanguages
        - taskType
        - scoreMax
        - checkerScript
        - timeLimit
        - memoryLimit
        - compileTimeLimit
        - compileMemoryLimit
        - submissionSizeLimit
        - isPublicInArchive
      properties:
        title:
          type: string
        slug:
          type: string
        description:
          type: string
        statement:
          type: string
        allowedLanguages:
          type: string
        taskType:
          type: string
        scoreMax:
          type: number
        checkerScript:
          $ref: '#/components/schemas/ScriptPayload'
        timeLimit:
          type: number
        memoryLimit:
          type: number
        compileTimeLimit:
          type: number
        compileMemoryLimit:
          type: number
        submissionSizeLimit:
          type: number
        validatorScript:
          $ref: '#/components/schemas/ScriptPayload'
        isPublicInArchive:
          type: boolean
        subtasks:
          type: array
          items:
            $ref: '#/components/schemas/SubtaskPayload'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/TaskAttachmentPayload'
        data:
          type: array
          items:
            $ref: '#/components/schemas/TestDataPayload'
        developers:
          type: array
          items:
            $ref: '#/components/schemas/TaskDeveloperPayload'
    UserError:
      type: object
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
        passwordConfirm:
          type: string
        country:
          type: string
    SubmissionError:
      type: object
      properties:
        languageCode:
          type: string
    FileError:
      type: object
      properties:
        name:
          type: string
        size:
          type: string
        contents:
          type: string
    ScriptError:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/FileError'
        languageCode:
          type: string
        runtimeArgs:
          type: string
    SubtaskError:
      type: object
      properties:
        name:
          type: string
        order:
          type: string
        scoreMax:
          type: string
        scorerScript:
          $ref: '#/components/schemas/ScriptError'
        validatorScript:
          $ref: '#/components/schemas/ScriptError'
        testDataPattern:
          type: string
    TaskAttachmentError:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/FileError'
    TestDataError:
      type: object
      properties:
        order:
          type: string
        name:
          type: string
        inputFile:
          $ref: '#/components/schemas/FileError'
        outputFile:
          $ref: '#/components/schemas/FileError'
        judgeFile:
          $ref: '#/components/schemas/FileError'
        isSample:
          type: string
    TaskDeveloperError:
      type: object
      properties:
        username:
          type: string
        order:
          type: string
        role:
          type: string
    TaskError:
      type: object
      properties:
        title:
          type: string
        slug:
          type: string
        description:
          type: string
        statement:
          type: string
        allowedLanguages:
          type: string
        taskType:
          type: string
        scoreMax:
          type: string
        checkerScript:
          $ref: '#/components/schemas/ScriptError'
        timeLimit:
          type: string
        memoryLimit:
          type: string
        compileTimeLimit:
          type: string
        compileMemoryLimit:
          type: string
        submissionSizeLimit:
          type: string
        validatorScript:
          $ref: '#/components/schemas/ScriptError'
        isPublicInArchive:
          type: string
        subtasks:
          type: array
          items:
            $ref: '#/components/schemas/SubtaskError'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/TaskAttachmentError'
        data:
          type: array
          items:
            $ref: '#/components/schemas/TestDataError'
        developers:
          type: array
          items:
            $ref: '#/components/schemas/TaskDeveloperError'
    User:
      type: object
      required:
        - id
        - email
        - username
        - createdAt
        - isAdmin
        - country
      properties:
        id:
          type: string
        email:
          type: string
        username:
          type: string
        createdAt:
          type: string
        isAdmin:
          type: boolean
        school:
          type: string
        name:
          type: string
        country:
          type: string
    UserDetailed:
      type: object
      required:
        - id
        - email
        - username
        - createdAt
        - isAdmin
        - country
        - tasks
        - develops
        - submissions
        - contests
        - participations
      properties:
        id:
          type: string
        email:
          type: string
        username:
          type: string
        createdAt:
          type: string
        isAdmin:
          type: boolean
        school:
          type: string
        name:
          type: string
        country:
          type: string
        # TODO add more annotations to the below. Preferably through $ref
        tasks:
          type: object
        develops:
          type: object
        submissions:
          type: object
        contests:
          type: object
        participations:
          type: object
    Task:
      type: object
      required:
        - title
        - slug
        - statement
        - allowedLanguages
        - taskType
        - scoreMax
        - timeLimit
        - memoryLimit
        - compileTimeLimit
        - compileMemoryLimit
        - submissionSizeLimit
        - isPublicInArchive
      properties:
        title:
          type: string
        slug:
          type: string
        description:
          type: string
        statement:
          type: string
        allowedLanguages:
          type: string
        taskType:
          type: string
        scoreMax:
          type: number
        timeLimit:
          type: number
        memoryLimit:
          type: number
        compileTimeLimit:
          type: number
        compileMemoryLimit:
          type: number
        submissionSizeLimit:
          type: number
        isPublicInArchive:
          type: boolean
    TaskDetailed:
      type: object
      required:
        - id
        - owner
        - title
        - slug
        - statement
        - allowedLanguages
        - taskType
        - scoreMax
        - checkerScript
        - timeLimit
        - memoryLimit
        - compileTimeLimit
        - compileMemoryLimit
        - submissionSizeLimit
        - isPublicInArchive
      properties:
        owner:
          $ref: '#/components/schemas/User'
        checkerScript:
          $ref: '#/components/schemas/ScriptPayload'
        validatorScript:
          $ref: '#/components/schemas/ScriptPayload'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/TaskAttachmentPayload'
        developers:
          type: array
          items:
            $ref: '#/components/schemas/TaskDeveloperPayload'
        testData:
          type: array
          items:
            $ref: '#/components/schemas/TestDataPayload'
        # TODO annotate Contest
        appearsIn:
          type: array
          items:
            type: object
        submissions:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionPayload'
        subtasks:
          type: array
          items:
            $ref: '#/components/schemas/SubtaskPayload'
        title:
          type: string
        slug:
          type: string
        description:
          type: string
        statement:
          type: string
        allowedLanguages:
          type: string
        taskType:
          type: string
        scoreMax:
          type: number
        timeLimit:
          type: number
        memoryLimit:
          type: number
        compileTimeLimit:
          type: number
        compileMemoryLimit:
          type: number
        submissionSizeLimit:
          type: number
        isPublicInArchive:
          type: boolean
    TaskSummary:
      type: object
      required:
        - id
        - title
        - slug
        - isPublicInArchive
      properties:
        id:
          type: string
        title:
          type: string
        slug:
          type: string
        description:
          type: string
        isPublicInArchive:
          type: boolean